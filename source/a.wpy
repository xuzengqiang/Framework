<!--  -->
<template>
    <view class="emptyCart" hidden="{{isHidden}}">
        <image src="../image/icon_cart_active@3x.png"></image>
        <text>你还没有添加任何商品，快去添加吧</text>
    </view>
    <view class="fullCart" hidden="{{!isHidden}}">
        <view class="address">
            <view class="address-name">
                <view class="left">收货人：<text>{{addressData.userName}}</text></view>
                <view class="right">
                    <text class="telNum">{{addressData.telNumber}}</text>
                    <text class="iconfont icon-jiantouyou"></text>
                </view>
            </view>
            <view class="address-info">
                <text>收货地址：</text>
                <text>{{addressData.provinceName}}{{addressData.cityName}}{{addressData.countyName}}{{addressData.detailInfo}}</text>
            </view>
            <image src="../image/border.PNG"></image>
        </view>
        <view class="title">
            <text class="iconfont icon-dianpu"></text>
            <text>优购生活馆</text>
        </view>
        <view class="goods-list">
            <block wx:for="{{goodsDetail}}" wx:key="">
                <view class="goods-box">
                    <view class="check-box">
                        <radio @tap="change({{index}})" checked="{{item.isChecked}}" />
                    </view>
                    <view class="goods">
                        <image class="left" src="{{item.goods_small_logo}}"></image>
                        <view class="right">
                            <view class="goods-name">{{item.goods_name}}</view>
                            <view class="goods-num">
                                <text class="price">￥<text>{{cartData[item.goods_id]*item.goods_price}}</text></text>
                                <view class="changeNum">
                                    <text class="minus" @tap="minusNum({{item.goods_id}})">-</text>
                                    <text class="num">{{cartData[item.goods_id]}}<text>
                                    <text class="add" @tap="addNumm({{item.goods_id}})">+</text>
                                </view>
                            </view>
                        </view>
                    </view>
                </view>
            </block>
        </view>
        <view class="count-price">
            <view class="check-box">
                <radio @tap="checkedAll" checked="{{checkAll}}" />
                <text>全选</text>
            </view>
            <view class="total">
                <view class="price">
                    合计：￥<text class="price-num">{{totalPrice}}</text>
                </view>
                <text>包含运费</text>
            </view>
            <button @tap="payMoney">结算({{totalNum}})</button>
        </view>
    </view>
</template>

<script>
    // import wepy from 'wepy'
    // var method = require('../utils/method.js')
    // export default class Cart extends wepy.page {
    //     config = {
    //         navigationBarTitleText: '购物车'
    //     }

    //     data = {
    //         // 购物车是否有货物，有显示fullCart,空显示emptyCart
    //         isHidden: false,
    //         // 收货地址：
    //         addressData:undefined,
    //         // 商品的id；
    //         goodsIds:[],
    //         // 商品的详细信息
    //         goodsDetail:[],
    //         // 保存购物已有的数据
    //         cartData:undefined,
    //         // 保存全选的选中状态；
    //         checkAll:'true',
    //         // 商品被选中的数量；
    //         checkedNum:0
    //     }

    //     components = {
    //     }

    //       methods = {
    //         // 给增加和减少添加点击事件：

    //         addNumm(goods_id){
    //             this.cartData[goods_id]++;
    //             wx.setStorage({
    //                 key: 'buyCart',
    //                 data: this.cartData
    //             });
    //         },
    //         // 全选/反选
    //         checkedAll() {
    //             this.checkAll = !this.checkAll;
    //             if(this.checkAll==true) {
    //                 this.goodsDetail.forEach(element => {
    //                     element.isChecked = true;
    //                 });
    //             }else {
    //                 this.goodsDetail.forEach(element => {
    //                     element.isChecked = false;
    //                 });
    //             }
    //         },
    //         // 选中，取消
    //         change(index){
    //             this.goodsDetail[index].isChecked = !this.goodsDetail[index].isChecked;
    //             // 计算选中商品的数量：
    //             var num = 0;
    //             this.goodsDetail.forEach(element => {
    //                 if(element.isChecked){
    //                     num++;
    //                 }
    //             });
    //             this.checkedNum = num;
    //             if(this.checkedNum==this.goodsDetail.length) {
    //                 this.checkAll = true;
    //             }else {
    //                 this.checkAll = false;
    //             }
    //         },
    //     //     // 支付结算
    //         payMoney(){
    //             // 判断是否选中地址：
    //             if(this.addressData==undefined){
    //                 wx.showToast({
    //                     title: '请填输入地址',
    //                     icon: 'none',
    //                     duration: 500,
    //                     mask: false,
    //                 });
    //                 return;
    //             }
    //             // 判断是否选中商品
    //             if(this.checkedNum==0){
    //                 wx.showToast({
    //                     title: '请选择商品',
    //                     icon: 'none',
    //                     duration: 1000,
    //                     mask: false,
    //                 });
    //                 return;
    //             }
    //         }
    //     }
    //     // 计算属性aPlus，在脚本中可通过this.aPlus来引用，在模板中可通过{{ aPlus }}来插值
    //     computed = {
    //         // 计算选中商品总价：
    //         totalPrice(){
    //             var totalPrice = 0;
    //             // 获取每个商品的单价
    //             // for(var i = 0 ; i < this.goodsDetail.length ; i++) {
    //             //     if(this.goodsDetail[i].isChecked==true){
    //             //         var price = this.goodsDetail[i].goods_price;
    //             //         var total = this.cartData[this.goodsDetail[i].goods_id];
    //             //         totalPrice += price * total;
    //             //     }
    //             // }
    //             return totalPrice;
    //         },
    //         // 计算商品选中数量（结算数量）
    //         totalNum(){
    //             var num = 0;
    //             this.goodsDetail.forEach(element => {
    //                 if(element.isChecked==true){
    //                     num++;
    //                 }
    //             });
    //             return num;
    //         }
    //     }
    //     events = {}

    //     watch = {}
    // // 页面一打开，只触发onLoad值触发一次
    //     onLoad() {

    //     }
    //     // 购物车显示哪个页面，取决于缓存里面是否有值；
    //     onShow() {
    //         // 获取缓存
    //         wx.getStorage({
    //             key: 'buyCart',
    //             success: res => {
    //                 this.isHidden = true;
    //                 this.cartData = res.data;
    //                 // forin遍历对象，取对象属性名，即key，存入数组中，
    //                 for(var key in this.cartData) {
    //                     this.goodsIds.push(key);
    //                 }
    //                 // 数组的join方法，将数组分割成字符串
    //                 var goods_ids = this.goodsIds.join(',');
    //                 method.request({
    //                     url:'api/public/v1/goods/goodslist',
    //                     data:{
    //                         goods_ids:goods_ids
    //                     },
    //                     success:backData => {
    //                         // 增加一个选中状态的属性：
    //                         // for(var i = 0 ; i < backData.data.message.length ; i++) {
    //                         //     backData.data.message[i].isChecked = true;
    //                         // }
    //                         // this.goodsDetail = backData.data.message;
    //                         // console.log(this.goodsDetail);
    //                         this.$apply();
    //                     }
    //                 })
    //             },
    //             fail: res => {
    //                 this.isHidden = false;
    //             }
    //         });
    //         // 获取地址缓存
    //         wx.getStorage({
    //             key: 'address',
    //             success: res => {
    //                 this.addressData = res.data;
    //             }
    //         });
    //     }



    }
</script>

<style lang='less'>
    page {
        width: 100%;
        height: 100%;
    }
    .emptyCart {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        height: 100%;
        background-color: #eee;
        image {
            margin: 100rpx 0 50rpx;
            width: 320rpx;
            height: 270rpx;
        }
        text {
            font-size: 38rpx;
        }
    }
    .fullCart {
        .address {
            height: 208rpx;
            position: relative;
            margin-bottom: 20rpx;
            padding: 0rpx 20rpx;
            font-size: 28rpx;
            .address-name {
                display: flex;
                justify-content: space-between;
                padding: 40rpx 0rpx;
            }
            image {
                height: 14rpx;
                width: 100%;
                position: absolute;
                bottom: 0rpx;
                left: 0rpx;
            }
        }
        .title {
            padding-left: 33rpx;
            height: 100rpx;
            line-height: 100rpx;
            font-size: 28rpx;
            background-color: #efefef;
            .iconfont {
                color: #aaa;
                margin-right: 10rpx;
            }
        }
        .goods-list {
            width: 100%;
            padding-bottom: 60rpx;
            .goods-box {
                // width: 100%;//设置宽度，子元素会挤出去
                display: flex;
                padding: 0rpx 20rpx;
                align-items: center;
            }
            .check-box {
                radio {
                    transform: scale(0.7);
                }
            }
            .goods {
                flex: 1;
                border-bottom: 1rpx solid #ccc;
                height: 205rpx;
                display: flex;
                padding: 20rpx 0rpx;
                .left {
                    width: 180rpx;
                    height: 190rpx;
                }
                .right {
                    flex: 1;
                    display: flex;
                    flex-direction: column;
                    justify-content: space-between;
                    padding-left: 20rpx;
                    .goods-name {
                        font-size: 30rpx;
                    }
                    .goods-num {
                        clear: both;
                        overflow: hidden;
                        .price {
                            float: left;
                            color: #ff2d40;
                            font-size: 24rpx;
                            text {
                                font-size: 30rpx;
                                font-weight: 700;
                            }
                        }
                        .changeNum {
                            float: right;
                            text {
                                display: inline-block;
                                width: 45rpx;
                                height: 45rpx;
                                line-height: 45rpx;
                                text-align: center;
                            }
                            .num {
                                width: 60rpx;
                            }
                            .minus , .add {
                                border: 2rpx solid #333;
                            }
                        }
                    }
                }
            }
        }
        .count-price {
            height: 100rpx;
            background-color: #efefef;
            display: flex;
            justify-content: space-around;
            align-items: center;
            padding-left: 20rpx;
            .check-box {
                width: 200rpx;
                radio {
                    transform: scale(0.9);
                }
            }
            .total {
                flex: 1;
                .price-num {
                    color: #ff2d40;
                }
                >text {
                    font-size: 28rpx;
                    color:#aaa;
                }
            }
            button {
                width: 200rpx;
                height: 100%;
                background-color: #ff2d40;
                color: #fff;
                font-size: 32rpx;
                border: 0 none;
                border-radius: 0;
            }
        }
    }
</style>
